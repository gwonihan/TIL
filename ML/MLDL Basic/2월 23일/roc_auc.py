# -*- coding: utf-8 -*-
"""ROC_AUC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1otp6aTs2xaFFnnAvLe0ivMd58MupRcXq
"""

import numpy as np
import matplotlib.pyplot as plt

y_test = np.array([1, 0, 1, 1, 0, 0, 1, 0])
y_prob = np.array([0.8, 0.2, 0.4, 0.4, 0.3, 0.6, 0.7, 0.1])

# 추정 확률로 label을 결정한다.
def find_label(p, treshold = 0.5):
    return (p > treshold).astype('uint8')

fpr, tpr = [], []
for thr in np.arange(0.1, 1.1, 0.1):
    y_pred = find_label(y_prob, thr)

    # Confusion matrix를 생성한다
    cm = np.zeros([2, 2])
    for a in [0, 1]:
        idx = np.where(y_test == a)
        for p in [0, 1]:
            cm[a, p] = (y_pred[idx] == p).sum()
    
    fpr.append(cm[0, 1] / cm[0, :].sum())
    tpr.append(cm[1, 1] / cm[1, :].sum())

# ROC curve를 그린다
plt.plot(fpr, tpr, marker='o')
plt.xticks(fpr)
plt.xlim(-0.1, 1)
plt.xlabel('FPR')
plt.ylabel('TPR')
plt.show()

from sklearn.metrics import roc_curve
from sklearn.metrics import roc_auc_score

# ROC curve를 그린다
fprs, tprs, thresholds = roc_curve(y_test, y_prob)

plt.plot(fprs, tprs, label = 'ROC')
plt.plot([0,1], [0,1], '--', label = 'Random')
plt.legend()
plt.xlabel('FPR')
plt.ylabel('TPR')
plt.show()

# AUC (Area Under Curve)를 계산한다
auc = roc_auc_score(y_test, y_prob)
print("ROC AUC = {0:.4f}".format(auc))

