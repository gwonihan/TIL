# -*- coding: utf-8 -*-
"""DTree(regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f-WaoMeN7VZUEFWYKw-NuEATd_mrnIRP
"""

# Regression tree 연습
import numpy as np
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split

x = np.arange(1, 19).reshape(-1, 1)
y = np.array([4.14, 3.37, 11.7, 6.3, 10.25, 10.32, 
              5.67, 7.12, 12.47, 17.97, 19.34, 21.62, 
              15.64, 25.83, 29.28, 21.47, 26.3, 32.48])

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

plt.scatter(x, y, c='red', s=100)
plt.show()

# regression tree를 생성한다.
reg = DecisionTreeRegressor(max_depth=5)
reg.fit(x, y)

print('R2 = ', reg.score(x_test, y_test))

# 임의의 x에 대한 y값을 추정한다.
a = 10.5
x_new = np.array(a).reshape(-1, 1)
y_hat = reg.predict(x_new)
print("\nx = {}일 때 y의 추정값 = {:.4f}".format(a, y_hat[0]))

# 학습 데이터인 x에 대한 y를 다시 추정해 보고, 원래 y와 비교해 본다.
y_hat = reg.predict(x)

# 추정된 y를 시각화 한다.
plt.scatter(x, y, c='red', s=100, alpha=0.7)
plt.plot(x, y_hat, marker='o', c='blue', alpha=0.7, 
         drawstyle="steps-post")
plt.show()



