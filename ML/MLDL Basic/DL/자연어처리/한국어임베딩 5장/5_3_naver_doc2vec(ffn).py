# -*- coding: utf-8 -*-
"""5-3.naver_doc2vec(FFN).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ORbdzUq0SI0OwlEsFuNb7XRS5k0EmUAK
"""

# Doc2Vec을 이용한 네이버 영화 감성분석
from tensorflow.keras.layers import Input, Dense, Dropout
from tensorflow.keras.models import Model
from tensorflow.keras.optimizers import Adam
import matplotlib.pyplot as plt
import numpy as np
import pickle

DATA_PATH = '/content/drive/My Drive/Colab Notebooks/data/'

# 학습 데이터를 읽어온다.
with open(DATA_PATH + 'naver_doc2vec.pkl', 'rb') as f:
    x_train, x_test, y_train, y_test = pickle.load(f)

y_train = np.array(y_train).reshape(-1, 1)
y_test = np.array(y_test).reshape(-1, 1)

# FFN 모델을 빌드한다.
x_input = Input(batch_shape=(None, x_train.shape[1]))
h_layer = Dense(128, activation='relu')(x_input)
h_layer = Dropout(rate=0.5)(h_layer)
h_layer = Dense(128, activation='relu')(h_layer)
h_layer = Dropout(rate=0.5)(h_layer)
y_output = Dense(1, activation='sigmoid')(h_layer)

model = Model(x_input, y_output)
model.compile(loss='binary_crossentropy', optimizer=Adam(learning_rate=0.001))
model.summary()

# 학습
hist = model.fit(x_train, y_train, 
                 validation_data = (x_test, y_test), 
                 batch_size = 2048, 
                 epochs = 100)

# Loss history를 그린다
plt.plot(hist.history['loss'], label='Train loss')
plt.plot(hist.history['val_loss'], label = 'Test loss')
plt.legend()
plt.title("Loss history")
plt.xlabel("epoch")
plt.ylabel("loss")
plt.show()

# 시험 데이터로 학습 성능을 평가한다
pred = model.predict(x_test)
y_pred = np.where(pred > 0.5, 1, 0)
accuracy = (y_pred == y_test).mean()
print("\nAccuracy = %.2f %s" % (accuracy * 100, '%'))

