# -*- coding: utf-8 -*-
"""p118.텍스트유사도.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ODCriko1BhVbX1LOwqIxRBE6mJfWGE7Y
"""

# Tfidf를 이용한 유사도 측정 예시
# 유사도 : 자카드, 코사인, 유클리디언, 맨하탄 유사도
# ------------------------------------------------
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer

sent = ("휴일 인 오늘 도 서쪽 을 중심 으로 폭염 이 이어졌는데요, 내일 은 반가운 비 소식 이 있습니다.", 
        "폭염 을 피해서 휴일 에 놀러왔다가 갑작스런 비 로 인해 망연자실 하고 있습니다.")

# 1. 자카드 유사도
# ----------------
sent_1 = set(sent[0].split())
sent_2 = set(sent[1].split())
print(sent_1)
print(sent_2)

# 합집합과 교집합을 구한다.
hap_set = sent_1 | sent_2
gyo_set = sent_1 & sent_2
print()
print(hap_set, '\n')
print(gyo_set, '\n')

jaccard = len(gyo_set) / len(hap_set)
print(jaccard)

tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(sent).toarray()
print(np.round(tfidf_matrix, 3))

idf = tfidf_vectorizer.idf_
print(dict(zip(tfidf_vectorizer.get_feature_names(), idf))) # 각 수치에 대한 값 시각화

# 2. 코사인 유사도
# ---------------
from sklearn.metrics.pairwise import cosine_similarity

d = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:2])
print(d)

# 3. 유클리디안 유사도
# -------------------
from sklearn.metrics.pairwise import euclidean_distances

euclidean_distances(tfidf_matrix[0:1], tfidf_matrix[1:2])

# 정규화
def l1_normalize(v):
    return v / np.sum(v)

tfidf_norm_l1 = l1_normalize(tfidf_matrix)
euclidean_distances(tfidf_norm_l1[0:1], tfidf_norm_l1[1:2])

# 4. 맨하탄 유사도
# ---------------
from sklearn.metrics.pairwise import manhattan_distances

manhattan_distances(tfidf_norm_l1[0:1], tfidf_norm_l1[1:2])

