# -*- coding: utf-8 -*-
"""BLEU.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ob7fc3FzK6kxOnPP34NKiM6Cm6r8js_0
"""

from nltk.translate.bleu_score import sentence_bleu
import numpy as np

# https://www.nltk.org/_modules/nltk/translate/bleu_score.html

reference = ['It is a guide to action that ensures that the military will forever heed Party commands'.split()]
candidate = 'It is a guide to action which ensures that the military always obeys the commands of the party'.split()

bleu = sentence_bleu(reference, candidate, weights=(1, 0, 0, 0))   # unigram: 11 / 18 = 0.61
print('unigram BLEU score = {}'.format(bleu))

bleu = sentence_bleu(reference, candidate, weights=(0, 1, 0, 0))   # bigram : 8 / 17 = 0.47
print('bigram BLEU score = {}'.format(bleu))

bleu = sentence_bleu(reference, candidate, weights=(0, 0, 1, 0))   # bigram : 6 / 16 = 0.375
print('trigram BLEU score = {}'.format(bleu))

bleu = sentence_bleu(reference, candidate, weights=(0, 0, 0, 1))   # bigram : 4 / 15 = 0.2667
print('4-grams BLEU score = {}'.format(bleu))

bleu = sentence_bleu(reference, candidate, weights=(0.5, 0.5, 0, 0))   # unigram과 bigram의 가중 평균
print('unigrams-bigrams BLEU score = {}'.format(bleu))

bleu = np.exp(0.5 * np.log(0.6111111111111112) + 0.5 * np.log(0.47058823529411764))
print('unigrams-bigrams BLEU score = {}'.format(bleu))

# w1 = w2 = w3 = ... 일 때는 기하평균과 동일함.
print('geometric mean =', np.sqrt(0.6111111111111112 * 0.47058823529411764))

# reference가 여러 개일 경우는 candidate의 단어가 reference 중 한개라도 있으면 count.
reference = ['It is a guide to action that ensures that the military will forever heed Party commands'.split(),
             'It is the guiding principle which guarantees the military forces always being under the command of the Party'.split(),
             'It is the practical guide for the army always to heed the directions of the party'.split()]
candidate = 'It is a guide to action which ensures that the military always obeys the commands of the party'.split()

bleu = sentence_bleu(reference, candidate, weights=(1, 0, 0, 0))   # unigram: (17 / 18) = 0.9444
print('unigram BLEU score = {}'.format(bleu))

bleu = sentence_bleu(reference, candidate)   # default : weights=(0.25, 0.25, 0.25, 0.25)
print('unigram ~ 4-grams : BLEU score = {}'.format(bleu))

