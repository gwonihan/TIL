# -*- coding: utf-8 -*-
"""0303.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12Qn89GSm9caQKzsk1eeiylR8OnbExq_1
"""

import numpy as np
from tensorflow.keras.layers import Input, Dense    # Input(입력층), Dense(은닉, 출력층)
from tensorflow.keras.models import Model   # model 구성할 때
from sklearn.model_selection import train_test_split
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt

DATA_PATH = '/content/drive/MyDrive/Colab Notebooks/data/'
df = pd.read_csv(DATA_PATH + 'diabetes.csv')
df.head()

x_feat = df.iloc[:, :-1]
y_target = df['Outcome'].to_numpy().reshape(-1, 1)
print(x_feat.shape, y_target.shape)

# Standard, MinMax Scaler
# scaler = StandardScaler()
scaler = MinMaxScaler()

# StandardScaler 로 데이터 셋 변환 .fit( ) 과 .transform( ) 호출
scaler.fit(x_feat)
x_scaled = scaler.transform(x_feat)

x_train, x_test, y_train, y_test = train_test_split(x_scaled, y_target, test_size=0.2)
x_train.shape, y_train.shape

xInput = Input(batch_shape = (None, x_train.shape[1]))
hidden = Dense(10, activation='relu')(xInput)
yOutput = Dense(y_train.shape[1], activation='sigmoid')(hidden)

model = Model(xInput, yOutput)
model.compile(loss='binary_crossentropy', optimizer='adam')
model.summary()

hist = model.fit(x_train, y_train, batch_size = 50, epochs=300, 
                 validation_data=(x_test, y_test))

# error가 감소하는 모습을 관찰한다.
plt.plot(hist.history['loss'], label='Train loss')
plt.plot(hist.history['val_loss'], label='Test loss')
plt.legend()
plt.title("Loss function")
plt.xlabel("epoch")
plt.ylabel("loss")
plt.show()

y_prob = model.predict(x_test)
y_pred = (y_prob > 0.5).astype('int8')

acc = (y_test == y_pred).mean()
print(round(acc, 4))

