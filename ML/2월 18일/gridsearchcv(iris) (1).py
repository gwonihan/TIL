# -*- coding: utf-8 -*-
"""GridSearchCV(iris).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ePwb-4QxGF-xo4aL1sQAvcmFT2xiM3nE
"""

# GridSearchCV cross validation 기능 연습
import numpy as np
from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split, GridSearchCV

iris = load_iris()

x_train, x_test, y_train, y_test = train_test_split(iris['data'], iris['target'], test_size = 0.2)

dt_params = [{'max_depth': np.arange(1, 20)}]
dt = DecisionTreeClassifier()
grid = GridSearchCV(estimator=dt, param_grid=dt_params, cv=5, refit=True)
grid.fit(x_train, y_train)

# grid.cv_results_     : K-fold cross validation test 결과 dictionary
# grid.best_params_    : best parameter ==> {'max_depth': 5}
# grid.best_estimator_ : best parameter로 생성한 tree

# 최적 모델로 시험 데이터의 성능을 평가한다.
best_model = grid.best_estimator_

print("\n최적 파라메터 =", grid.best_params_)
print("시험 데이터 정확도 = {:.4f}".format(best_model.score(x_test, y_test)))

